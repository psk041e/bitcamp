<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    
    
    <bean id="c1" class="bitcamp.java106.step07.Car"> <!-- 객체가 먼저 만들어진다. -->
                                                      <!-- String을 java.sql.Date객체로 바꿔줄 변환기를 찾는다. -->
                                                      <!-- setValue를 기본으로 호출한다. -->
                                                      <!-- xml태그에 문자열을 받았을 때 setAsText()를 호출한다. -->
                                                      <!-- 저장된 java.sql.Date객체를 꺼내서 
                                                           setCreatedDate메서드를 호출할때 리턴값을 꺼내서 쓴다. -->
                                                      <!-- => setAsText() 메서드만 오버라이딩 해주면 된다. -->
        <property name="model" value="티코"/>
        <property name="maker" value="비트자동차"/>
        <property name="cc" value="890"/> 
        <property name="auto" value="true"></property>
        <!-- String을 java.sql.Date 객체로 바꿔주는 프로퍼티 에디터(변환기)가 
            d설정되었기 때문에 이제 그냥 문자열을 지정해도 된다. -->
        <property name="createdDate" value="2018-5-8"/>
    </bean>
    
    <!-- String 값을 java.sql.Date 객체로 변환시키는 프로퍼티 에디터 장착하기 -->
    <!-- Spring IoC 컨테이너가 XML 설정 파일을 읽을 때:
        d만약 CustomEditorCongigurer 객체가 정의되어 있다면(id를 지정하지 않아도)
        d그 객체를 설정파일에 정의된 대로 만들고 준비시킨다.
        d그리고 프로퍼티 값을 저장할 때 이 객체에 정의된 프로퍼티 에디터를 사용할 것이다. -->
    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
	    <property name="customEditors"> <!-- setCustomDeitors라는 메서드 호출 -->
	        <map> <!-- 파라미터값 => map객체 -->
	           <!-- 프로퍼티 에디터를 설정하는 방법
	                key: String을 값을 지정된 타입의 값으로 바꿀 타입 이름이다.
	                value: 커스텀 에디터(프로퍼티 값 변환기) 클래스 이름이다.
	               d의미?
	                => 스프링 IoC 컨테이너가 프로퍼티 값을 설정할 때 
	                   d특히 String 값을 java.sql.Date 객체로 바꿔야 할 때 
	                   d이 클래스를 사용하여 값을 바꾸라는 뜻이다. 
	                 -->
	            <entry key="java.sql.Date" 
	                   value="bitcamp.java106.step07.CustomDateEditor"/>
	        </map>
	    </property>
    </bean>
</beans>







