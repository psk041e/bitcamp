<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    
    <context:component-scan base-package="bitcamp.java106.step12.ex04"></context:component-scan>
    
    <!-- Mybatis SqlSessionFactory 준비하기 -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean"> 
          <!-- spring에서 제공하는 클래스는 Factory를 한번만 썼다. -->
                
      <!-- mybatis를 스프링과 연동하면,
           DataSource는 스프링에서 관리하는 객체를 사용해야 한다.
           mybatis가 만든 DataSource를 사용할 수 없다. -->
      <property name="dataSource" ref="dataSource" />
      
      <!-- SQL 맵퍼 파일이 있는 경로를 설정하면,
           SqlSessionFactory에서 그 경로에서 SQL 맵퍼 파일을 찾을 것이다. -->
      <property name="mapperLocations" 
                value="classpath*:bitcamp/java106/step12/ex04/*Mapper.xml" /> <!-- 이것만 sql 맵퍼다. -->
      
      <!-- Board 클래스처럼 데이터를 담는 객체(Value Object = Domain Object)의 별명을 자동으로 등록하기
           => 패키지를 지정하면 그 패키지에 있는 모든 클래스에 대해 
           -  클래스 이름을 별명을 자동으로 부여한다. 
           -->
      <property name="typeAliases" value="bitcamp.java106.step12.Board"></property>
    </bean>
<!-- mybatis가 사용할 DataSource 객체 사용하기
     => BaiscDataSource 클래스가 들어 있는 apache-commons-
-->
    <bean id="dataSource" 
          class="org.apache.commons.dbcp.BasicDataSource" 
          destroy-method="close">
    <property name="driverClassName" value="${jdbc.driver}" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
</bean>

<!-- 스프링 설정 파일에서 사용할 .properties 파일을 로딩하는 객체 준비 -->
<!-- 주어진 파일을 읽어들이는 객체를 내부적으로 생성한다. -->
	<context:property-placeholder 
	    location="bitcamp/java106/step12/jdbc.properties"/>

<!-- DAO를 자동으로 만들어주는 객체를 준비한다.
     => 개발자는 DAO를 직접 생성할 필요가 없다. -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <!-- DAO 인터페이스가 선언된 패키지를 지정한다. -->
	  <property name="basePackage" value="bitcamp.java106.step12.ex04" />
	</bean>

</beans>







