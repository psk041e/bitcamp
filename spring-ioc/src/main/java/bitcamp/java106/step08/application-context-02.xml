<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    
    <!-- 밑에하나 위에하나 상관없다. -->
    <!-- BeanPostProcessor 인터페이스
         => 스프링 IoC 컨테이너는 객체 중에 이 인터페이스를 구현한 객체가 있다면,
           d다른 모든 객체를 생성한 후에 
           d이 구현체의 PostProcess...Initialization() 메서드를 호출하여
           d빈 생성 이후의 초기화 작업을 수행시킨다.
         => 그래서 인터페이스의 이름이 BeanPostProcessor(객체 생성 후 처리기)인 것이다.
     -->
    <!-- @Autowired 애노테이션을 처리하고 싶다면,
         d빈 생성 이후에 이 애노테이션을 처리할 BeanPostProcessor를 등록하면 된다.
         d그러면 스프링 IoC 컨테이너는 빈을 모두 생성한 후에 
         @Autowired 애노테이션을 처리하기 위해 이 객체의 메서드를 호출할 것이다.
         d다음 객체를 스프링 IoC 컨테이너에 등록하지 않으면,
         @Autowired 애노테이션은 처리되지 않는다. 
         => 객체(bean)를 생성한 후에 @Autowired 애노테이션을 처리할 것이다.
         => AutowiredAnnotationBeanPostProcessor 클래스는
            BeanPostProcessor 인터페이스의 구현체이다.
     -->
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    
    <bean id="c1" class="bitcamp.java106.step08.Car2">
        <property name="model" value="티코"/>
        <property name="maker" value="비트자동차"/>
        <property name="cc" value="890"/> 
        <property name="auto" value="true"/>
    </bean>
    
    <bean id="e1" class="bitcamp.java106.step08.Engine">
        <property name="maker" value="비트자동차"/>
        <property name="valve" value="16"/>
        <property name="cylinder" value="4"/>
    </bean>
</beans>







