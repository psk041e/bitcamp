// 산술 연산자 : 연산의 결과 타입
package step04;

public class Exam01_4 {
    public static void main(String[] args) {
        int i = 5; 
        int j = 2;
        float r = (float)i / j;
        System.out.println(r);
        // 정수 / 정수 -> 정수형 변수는 아무리 나누기를 해도 
        // 소수점은 없애버리고 정수만 리턴한다.
        // => 소수점이 있는 실수형 값을 받으려면 실수형 변수에 담아야 한다.
        // => 어느 숫자든 하나만 실수형이면 결과값은 실수형이 반환된다
        // 왜?
        // 수치 연산자에 대한 피연산자중 적어도 하나가 double형인 경우
        // 연산은 64비트 부동소수점 산술을 사용하여 수행된다.
        // => 피연산자중 적어도 하나가 double형이면 정밀도의 손실이 
        //    발생할 수 있기 때문에 부동소수점 산술을 하게 된다.(?)

        //
    }
}
